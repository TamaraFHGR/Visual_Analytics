imis_df = load_imis_stations()			--> 1.1						assets/API/daily/00_SLF_imis_stations.csv
daily_snow_df = load_daily()			--> 1.1 & 1.2				assets/API/daily/06_SLF_daily_imis_all_live_data.csv

k_centers_df = load_kmeans_centers()	--> 2.1						assets/K-Means_Clustering/03_hist_cluster_centers.csv
pca_training_df = load_pca_training()	--> 2.1						assets/K-Means_Clustering/02_hist_pca_data.csv
pca_live_df = load_pca_live()			--> 2.1 & 2.2				assets/API/daily/09_PCA_Live_Data.csv

acc_df = load_hist_data()				--> 3.1						assets/API/daily/01_SLF_hist_statistical_avalanche_data.csv
kmeans_df = load_kmeans_training()		--> 3.2						assets/K-Means_Clustering/01_hist_input_data_k-clustered.csv

----------------------------------------------------------------
1.1 imis_live_map
	- filtered_data = imis_df.copy()
	- daily_snow_df --> daily_snow_df['measure_date'].max()]

1.2 weather_trend
	- filtered_data = daily_snow_df.copy()
----------------------------------------------------------------
2.1 k_means_cluster
	- pca_live_df
	- pca_training_df
	- k_centers_df

2.2 cluster_matrix
	- filtered_data = pca_live_df.copy()
----------------------------------------------------------------
3.1 imis_acc_map
	- filtered_df = acc_df.copy()

3.2 accident_stats
	- filtered_df = kmeans_df.copy()
----------------------------------------------------------------

Git Workflow:
*************
1) daily_imis_api_call.yml				--> # Daily at 15:00 UTC (17:00 local time)
	- 01_API_Load_IMIS_Daily_Data.py
	- 02_API_Load_IMIS_Daily_Snow.py

2) duplicate_deletion.yml				--> # Daily at 15:10 UTC (17:10 local time)
	- 03_Delete_Duplicates.py

3) aggregation_daily.yml				--> # Daily at 15:20 UTC (17:20 local time)
	- 04_Aggregate_to_daily_data.py

4) merge_all_daily_live_data.yml		--> # Daily at 15:30 UTC (17:30 local time)
	- 05_Prepare_live_data_for_PCA.py

5) k_means_clustering.yml				--> # Daily at 15:40 UTC (17:40 local time)
    - 06_K-Means_Clustering.py